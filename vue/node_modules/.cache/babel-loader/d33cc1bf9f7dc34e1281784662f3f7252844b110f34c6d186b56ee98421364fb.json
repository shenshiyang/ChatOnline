{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport echarts from 'echarts';\nrequire('echarts/theme/macarons'); // echarts theme\nimport resize from './mixins/resize';\nimport request from \"@/utils/request\";\n// import {listPost, getPost, delPost, addPost, updatePost, exportPost} from \"@/api/biz/post\";\nexport default {\n  mixins: [resize],\n  props: {\n    className: {\n      type: String,\n      default: 'chart'\n    },\n    width: {\n      type: String,\n      default: '100%'\n    },\n    height: {\n      type: String,\n      default: '300px'\n    }\n  },\n  data() {\n    return {\n      chart: null\n    };\n  },\n  mounted() {\n    this.$nextTick(() => {\n      this.initChart();\n    });\n  },\n  beforeDestroy() {\n    if (!this.chart) {\n      return;\n    }\n    this.chart.dispose();\n    this.chart = null;\n  },\n  methods: {\n    initChart() {\n      console.log(\"itemitem\");\n      const counts = {};\n      request.get('/logs').then(item => {\n        console.log(\"itemitem\", item);\n        item.data.forEach(res => {\n          if (res.name == JSON.parse(localStorage.getItem(\"user\")).name) {\n            const fieldValue = res.time.substring(0, 7); // 在这里替换为你想要统计的字段\n\n            if (res.type == 0) {\n              counts[fieldValue + \"支出\"] = (counts[fieldValue + \"支出\"] || 0) + res.content * 1;\n            } else {\n              counts[fieldValue + \"收入\"] = (counts[fieldValue + \"收入\"] || 0) + res.content * 1;\n            }\n          }\n        });\n        console.log(\"counts\", counts);\n        let data = [];\n        for (const fieldValue in counts) {\n          data.push({\n            value: counts[fieldValue].toFixed(2),\n            name: fieldValue\n          });\n        }\n        console.log(\"data\", data);\n        this.chart = echarts.init(this.$el, 'macarons');\n        this.chart.setOption({\n          title: {\n            // 添加标题部分\n            text: '月支出与收入',\n            // 标题文字\n            left: 'center',\n            // 标题水平居中\n            top: 0\n          },\n          tooltip: {\n            trigger: 'item',\n            formatter: '{a} <br/>{b} : {c} ({d}%)'\n          },\n          legend: {\n            left: 'center',\n            bottom: '10',\n            data: Object.keys(counts)\n          },\n          series: [{\n            name: '各反馈统计',\n            type: 'pie',\n            roseType: 'radius',\n            radius: [15, 95],\n            center: ['50%', '38%'],\n            data: data,\n            animationEasing: 'cubicInOut',\n            animationDuration: 2600\n          }]\n        });\n      });\n    }\n  }\n};","map":{"version":3,"names":["echarts","require","resize","request","mixins","props","className","type","String","default","width","height","data","chart","mounted","$nextTick","initChart","beforeDestroy","dispose","methods","console","log","counts","get","then","item","forEach","res","name","JSON","parse","localStorage","getItem","fieldValue","time","substring","content","push","value","toFixed","init","$el","setOption","title","text","left","top","tooltip","trigger","formatter","legend","bottom","Object","keys","series","roseType","radius","center","animationEasing","animationDuration"],"sources":["src/views/PieChart2.vue"],"sourcesContent":["<template>\n  <div :class=\"className\" :style=\"{height:height,width:width}\" />\n</template>\n\n<script>\nimport echarts from 'echarts'\nrequire('echarts/theme/macarons') // echarts theme\nimport resize from './mixins/resize'\nimport request from \"@/utils/request\";\n// import {listPost, getPost, delPost, addPost, updatePost, exportPost} from \"@/api/biz/post\";\nexport default {\n  mixins: [resize],\n  props: {\n    className: {\n      type: String,\n      default: 'chart'\n    },\n    width: {\n      type: String,\n      default: '100%'\n    },\n    height: {\n      type: String,\n      default: '300px'\n    }\n  },\n  data() {\n    return {\n      chart: null\n    }\n  },\n  mounted() {\n    this.$nextTick(() => {\n      this.initChart()\n    })\n  },\n  beforeDestroy() {\n    if (!this.chart) {\n      return\n    }\n    this.chart.dispose()\n    this.chart = null\n  },\n  methods: {\n    initChart() {\n      console.log(\"itemitem\")\n      const counts = {};\n\n\n\n          request.get('/logs').then(item=>{\n            console.log(\"itemitem\",item)\n            item.data.forEach(res=>{\n              if(res.name==JSON.parse(localStorage.getItem(\"user\")).name) {\n                const fieldValue = res.time.substring(0, 7); // 在这里替换为你想要统计的字段\n\n                if (res.type == 0) {\n                  counts[fieldValue + \"支出\"] = (counts[fieldValue + \"支出\"] || 0) + res.content * 1;\n                } else {\n                  counts[fieldValue + \"收入\"] = (counts[fieldValue + \"收入\"] || 0) + res.content * 1;\n                }\n\n              }\n        })\n\n\n        console.log(\"counts\",counts)\n\n        let data = [];\n\n        for (const fieldValue in counts) {\n          data.push({ value: (counts[fieldValue]).toFixed(2), name: fieldValue });\n\n        }\n        console.log(\"data\",data)\n        this.chart = echarts.init(this.$el, 'macarons')\n\n        this.chart.setOption({\n          title: { // 添加标题部分\n            text: '月支出与收入', // 标题文字\n            left: 'center', // 标题水平居中\n            top: 0\n          },\n          tooltip: {\n\n            trigger: 'item',\n            formatter: '{a} <br/>{b} : {c} ({d}%)'\n          },\n          legend: {\n            left: 'center',\n            bottom: '10',\n            data:Object.keys(counts)\n          },\n          series: [\n            {\n              name: '各反馈统计',\n              type: 'pie',\n              roseType: 'radius',\n              radius: [15, 95],\n              center: ['50%', '38%'],\n              data: data,\n              animationEasing: 'cubicInOut',\n              animationDuration: 2600\n            }\n          ]\n        })\n      })\n    }\n  }\n}\n</script>\n"],"mappings":";AAKA,OAAAA,OAAA;AACAC,OAAA;AACA,OAAAC,MAAA;AACA,OAAAC,OAAA;AACA;AACA;EACAC,MAAA,GAAAF,MAAA;EACAG,KAAA;IACAC,SAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;IACAC,KAAA;MACAH,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;IACAE,MAAA;MACAJ,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;EACA;EACAG,KAAA;IACA;MACAC,KAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,SAAA;MACA,KAAAC,SAAA;IACA;EACA;EACAC,cAAA;IACA,UAAAJ,KAAA;MACA;IACA;IACA,KAAAA,KAAA,CAAAK,OAAA;IACA,KAAAL,KAAA;EACA;EACAM,OAAA;IACAH,UAAA;MACAI,OAAA,CAAAC,GAAA;MACA,MAAAC,MAAA;MAIAnB,OAAA,CAAAoB,GAAA,UAAAC,IAAA,CAAAC,IAAA;QACAL,OAAA,CAAAC,GAAA,aAAAI,IAAA;QACAA,IAAA,CAAAb,IAAA,CAAAc,OAAA,CAAAC,GAAA;UACA,IAAAA,GAAA,CAAAC,IAAA,IAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA,UAAAJ,IAAA;YACA,MAAAK,UAAA,GAAAN,GAAA,CAAAO,IAAA,CAAAC,SAAA;;YAEA,IAAAR,GAAA,CAAApB,IAAA;cACAe,MAAA,CAAAW,UAAA,YAAAX,MAAA,CAAAW,UAAA,iBAAAN,GAAA,CAAAS,OAAA;YACA;cACAd,MAAA,CAAAW,UAAA,YAAAX,MAAA,CAAAW,UAAA,iBAAAN,GAAA,CAAAS,OAAA;YACA;UAEA;QACA;QAGAhB,OAAA,CAAAC,GAAA,WAAAC,MAAA;QAEA,IAAAV,IAAA;QAEA,WAAAqB,UAAA,IAAAX,MAAA;UACAV,IAAA,CAAAyB,IAAA;YAAAC,KAAA,EAAAhB,MAAA,CAAAW,UAAA,EAAAM,OAAA;YAAAX,IAAA,EAAAK;UAAA;QAEA;QACAb,OAAA,CAAAC,GAAA,SAAAT,IAAA;QACA,KAAAC,KAAA,GAAAb,OAAA,CAAAwC,IAAA,MAAAC,GAAA;QAEA,KAAA5B,KAAA,CAAA6B,SAAA;UACAC,KAAA;YAAA;YACAC,IAAA;YAAA;YACAC,IAAA;YAAA;YACAC,GAAA;UACA;UACAC,OAAA;YAEAC,OAAA;YACAC,SAAA;UACA;UACAC,MAAA;YACAL,IAAA;YACAM,MAAA;YACAvC,IAAA,EAAAwC,MAAA,CAAAC,IAAA,CAAA/B,MAAA;UACA;UACAgC,MAAA,GACA;YACA1B,IAAA;YACArB,IAAA;YACAgD,QAAA;YACAC,MAAA;YACAC,MAAA;YACA7C,IAAA,EAAAA,IAAA;YACA8C,eAAA;YACAC,iBAAA;UACA;QAEA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}